import 'package:flutter/material.dart';
import 'package:audio_video_progress_bar/audio_video_progress_bar.dart';



import 'utils/myicons.dart';
import 'package:carousel_slider/carousel_slider.dart';

import 'package:flutter_svg/flutter_svg.dart';
import 'package:sliding_up_panel/sliding_up_panel.dart';

import 'utils/myThemes.dart';
import 'utils/audioScroll.dart';
import 'utils/bottomNavBar.dart';

void main() {
  runApp(AllPages());
}

/* Frame Find Yours
    Autogenerated by FlutLab FTF Generator
  */
Map<String, dynamic> discover = {
  'options': ['Popular', 'Continue', 'lame']
};

late PanelController panelController;
var pageIndex = 0;

class AllPages extends StatefulWidget {
  AllPages({Key? key}) : super(key: key);

  @override
  State<AllPages> createState() => _AllPagesState();
}

class _AllPagesState extends State<AllPages> {
  List<Widget> thePages = [
    HomePage(),
    // SearchPage(),
    // DownLoadsPage(),
    // Settings()
  ];

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    panelController = PanelController();
  }

  @override
  void dispose() {
    // TODO: implement dispose
    super.dispose();
    panelController = PanelController();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      bottomNavigationBar: MyBottomNavBar(
          currentIndex: pageIndex,
          tapped: (p0) {
            setState(() {
              pageIndex = p0;
            });
          },
          selectedIcons: [
            Icon(Icons.home_filled, color: myThemes.lightFontTheme,size: 15,),
            Icon(Icons.search, color: myThemes.lightFontTheme, size: 15),
            Icon(Icons.download_done, color: myThemes.lightFontTheme, size: 15),
            Icon(Icons.settings, color: myThemes.lightFontTheme, size: 15)
          ],
          unselectedIcons: const [
            Icon(Icons.home_rounded, color: Color.fromARGB(255, 217, 217, 217) , size: 15),
            Icon(Icons.search_off, color: Color.fromARGB(255, 217, 217, 217) , size: 15),
            Icon(Icons.download, color: Color.fromARGB(255, 217, 217, 217) , size: 15),
            Icon(Icons.settings, color: Color.fromARGB(255, 217, 217, 217) , size: 15)
          ]),
      body: thePages[pageIndex],
    );
  }
}

class HomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return SafeArea(
      bottom: false,
      child: Scaffold(
          body: Container(
        width: myThemes.returnWidth(context),
        height: myThemes.returnHeight(context),
        decoration: BoxDecoration(gradient: myThemes.myLinearGradient),
        child: CustomScrollView(slivers: [
          SliverAppBar(
            // elevation: 2.0,
            pinned: true,
            automaticallyImplyLeading: false,
            // floating: true,
            centerTitle: true,

            expandedHeight: 200,
            backgroundColor: myThemes.darkFontTheme,
            flexibleSpace: FlexibleSpaceBar(
              title: HomePageOptions(),
              titlePadding: EdgeInsets.only(left: 4, right: 4, bottom: 10),
              expandedTitleScale: 1,
              centerTitle: true,
              stretchModes: [StretchMode.fadeTitle],
              collapseMode: CollapseMode.parallax,
              background: DecoratedBox(
                  decoration: const BoxDecoration(
                      gradient: LinearGradient(
                    colors: [
                      Colors.black54,
                      Color.fromARGB(255, 60, 47, 47),
                    ],
                    begin: Alignment(0.18, -1.2),
                    end: Alignment(0.3, 0.23),
                  )),
                  child: Padding(
                    padding: EdgeInsets.only(bottom: 50, left: 20),
                    child: headingTitle('Find Yours', FontWeight.w500, 32),
                  )),
            ),
          ),
          SliverList(
              delegate: SliverChildBuilderDelegate((context, index) {
            return AudioScroll(title: discover['options'][index]);
          }, childCount: discover['options'].length)),
          SliverList(
              delegate: SliverChildBuilderDelegate(
            ((context, index) {
              return HitSongs();
            }),
            childCount: 10,
          ))
        ]),
      )),
    );
  }
}

/* Frame Frame 15
    Autogenerated by FlutLab FTF Generator
  */
class HomePageOptions extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      height: 23.0,
      child:
          HPoptions(children: ['Nasheeds', 'Podcasts', 'Lecttures', 'Qur\'an']),
    );
  }
}

/* Frame nasheedOpt
    Autogenerated by FlutLab FTF Generator
  */

class HPoptions extends StatefulWidget {
  List<String> children = [];

  HPoptions({Key? key, required this.children}) : super(key: key);

  @override
  State<HPoptions> createState() => _HPoptionsState();
}

class _HPoptionsState extends State<HPoptions> {
  int currentIndex = -1;
  List<Widget> options = [];
  bool isClicked = false;

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
        scrollDirection: Axis.horizontal,
        itemCount: widget.children.length,
        itemBuilder: ((context, index) {
          return optContainer(
              tapped: () {
                setState(() {
                  currentIndex = index;
                });
              },
              border: currentIndex == index
                  ? Border.all(color: Colors.transparent)
                  : Border.all(color: myThemes.lightFontTheme),
              bgColor: currentIndex == index
                  ? myThemes.lightFontTheme
                  : Colors.transparent,
              text: widget.children[index],
              textColor: currentIndex == index
                  ? myThemes.darkFontTheme
                  : myThemes.lightFontTheme);
        }));
  }
}

class optContainer extends StatefulWidget {
  late BoxBorder border;
  late Color bgColor;
  late String text;
  late Color textColor;
  void Function() tapped;

  optContainer(
      {Key? key,
      required this.border,
      required this.bgColor,
      required this.text,
      required this.textColor,
      required this.tapped})
      : super(key: key);

  @override
  State<optContainer> createState() => _optContainerState();
}

class _optContainerState extends State<optContainer> {
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 8.0),
      child: InkWell(
        onTap: widget.tapped,
        child: Container(
            width: 87.0,
            height: 23.0,
            padding: EdgeInsets.symmetric(horizontal: 5),
            decoration: BoxDecoration(
              border: widget.border,
              borderRadius: BorderRadius.circular(11.0),
              color: widget.bgColor,
            ),
            child: Center(
              child: Text(
                widget.text,
                style: TextStyle(
                    color: widget.textColor,
                    fontSize: 12,
                    fontWeight: FontWeight.w400),
              ),
            )),
      ),
    );
  }
}

class HitSongs extends StatelessWidget {
  const HitSongs({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Card(
      color: Colors.transparent,
      shadowColor: Colors.transparent,
      child: Column(
        children: [
          Padding(
            padding: const EdgeInsets.only(
              left: 10.0,
              top: 18,
            ),
            child: headingTitle('Top 50', FontWeight.w500, 40),
          ),
          SizedBox(
            height: 30,
          ),
          CarouselSlider.builder(
              itemCount: 10,
              itemBuilder: ((context, index, realIndex) => HitSongsBox()),
              options: CarouselOptions(height: 100, viewportFraction: 0.28))
        ],
      ),
    );
  }
}

Widget HitSongsBox() {
  return Container(
    width: 100,
    height: 100,
    decoration: BoxDecoration(
      borderRadius: BorderRadius.circular(10),
      color: Color.fromARGB(255, 217, 217, 217),
    ),
  );
}
